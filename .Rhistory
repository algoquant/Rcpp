core_data <- core_data["2020-01-10/"]
core_data <- na.omit(core_data)
in_dex <- index(core_data)
date_s <- as.Date(in_dex)
date_s <- unique(date_s)
in_dex <- as.Date(in_dex)
sapply(date_s, function(dat_e) {
sum(core_data[(in_dex == dat_e), 1])
})  # end sapply
dat_e <- date_s[1]
dat_e
foo <- core_data[(in_dex == dat_e), 1]
foo
foo <- core_data[(in_dex == dat_e), ]
foo
sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2]>0, 1])
})  # end sapply
sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2] > 0.15, 1])
})  # end sapply
sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2] > 0.1, 1])
})  # end sapply
sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2] > 0.2, 1])
})  # end sapply
sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2] > 0.15, 1])
})  # end sapply
date_s
foo <- sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2] > 0.15, 1])
})  # end sapply
names(foo) <- date_s
foo
da_ta <- read.zoo(file="C:/Develop/data/predictive/predictions_short_account.csv", header=TRUE, sep=",")
da_ta <- as.xts(da_ta)
in_dex <- index(da_ta)
col_names <- colnames(da_ta)
da_ta <- lapply(da_ta, as.numeric)
da_ta <- rutils::do_call(cbind, da_ta)
da_ta <- xts(da_ta, in_dex)
colnames(da_ta) <- col_names
core_data <- da_ta[, 8:9]
colnames(core_data) <- c("actual", "predicted")
core_data <- core_data["2020-01-10/"]
core_data <- na.omit(core_data)
in_dex <- index(core_data)
date_s <- as.Date(in_dex)
date_s <- unique(date_s)
in_dex <- as.Date(in_dex)
foo <- sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2] > 0.15, 1])
})  # end sapply
names(foo) <- date_s
foo
foo <- sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2] > 0.2, 1])
})  # end sapply
names(foo) <- date_s
foo
max(core_data[, 1])
foo <- sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2] > 0.3, 1])
})  # end sapply
names(foo) <- date_s
foo
foo <- sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2] > 0.15, 1])
})  # end sapply
names(foo) <- date_s
foo
foo <- sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2] > 0.1, 1])
})  # end sapply
names(foo) <- date_s
foo
foo <- sapply(date_s, function(dat_e) {
foo <- core_data[(in_dex == dat_e), ]
sum(foo[foo[, 2] > 0.15, 1])
})  # end sapply
names(foo) <- date_s
foo
rm(list = ls())
ls()
library(microbenchmark)
# Compile Rcpp functions
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
da_ta <- letters[sample(7)]
print_string(sort_string(da_ta))
da_ta <- sample(3, 21, replace=TRUE)
calc_table(da_ta)
all.equal(calc_table(da_ta), as.numeric(table(da_ta)))
summary(microbenchmark(
rcode=table(da_ta),
stl=calc_table(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=table(da_ta),
stl=calc_table(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
calc_table(da_ta)
all.equal(calc_table(da_ta), as.numeric(table(da_ta)))
summary(microbenchmark(
rcode=table(da_ta),
stl=calc_table(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=table(da_ta),
stl=calc_table(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
calc_table(da_ta)
all.equal(calc_table(da_ta), as.numeric(table(da_ta)))
summary(microbenchmark(
rcode=table(da_ta),
stl=calc_table(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=table(da_ta),
stl=calc_table(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
calc_table(da_ta)
all.equal(calc_table(da_ta), as.numeric(table(da_ta)))
summary(microbenchmark(
rcode=table(da_ta),
stl=calc_table(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=table(da_ta),
stl=calc_table(da_ta),
times=10))[, c(1, 4, 5)]
da_ta <- sample(11, 211, replace=TRUE)
summary(microbenchmark(
rcode=table(da_ta),
stl=calc_table(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=table(da_ta),
stl=calc_table(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
ls()
da_ta <- sample(3, 21, replace=TRUE)
da_ta
square_vec(da_ta)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
square_vec(da_ta)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
count_er()
ls()
rm(sort_num_index)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
sort_index(da_ta)
da_ta <- sample(11)
da_ta
sort_index(da_ta)
da_ta[sort_index(da_ta)]
sort(da_ta)[sort_index(da_ta)]
sort_index(da_ta)
order(da_ta)
in_dex <- sort_index(da_ta)
(1:11)[in_dex]
da_ta
da_ta[in_dex]
sort(da_ta)[in_dex]
in_dex
order(da_ta)
sort(da_ta)
# Compile Rcpp functions
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
order(da_ta)
in_dex <- sort_index(da_ta)
in_dex
da_ta[in_dex]
da_ta
da_ta[in_dex+1]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
in_dex <- sort_index(da_ta)
da_ta[in_dex+1]
sort(da_ta)
print_string(sort_string(da_ta))
da_ta <- sample(101)
all.equal(sort_index(da_ta)+1, order(da_ta))
all.equal(sort_index(da_ta)+1, order(da_ta))
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
da_ta <- sample(1001)
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
da_ta <- sample(1001)
all.equal(sort_index(da_ta)+1, order(da_ta))
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
da_ta <- round(runif(1e2), 2)
all.equal(drop(HighFreq::calc_ranks(da_ta)), calc_ranks(da_ta)+1)
summary(microbenchmark(
rcode=rank(da_ta),
arma=HighFreq::calc_ranks(da_ta),
stl=calc_ranks(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=rank(da_ta),
arma=HighFreq::calc_ranks(da_ta),
stl=calc_ranks(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
is_greater(da_ta, 2, 4)
da_ta
is_greater(da_ta, 1, 3)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
is_greater(da_ta, 1, 3)
ls()
da_ta <- sample(11)
da_ta
is_greater(da_ta, 1, 3)
is_greater(da_ta, 1, 2)
all.equal(sort_index(da_ta)+1, order(da_ta))
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
library(microbenchmark)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
all.equal(sort_index(da_ta)+1, order(da_ta))
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
da_ta <- sample(1001)
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
all.equal(sort_index(da_ta)+1, order(da_ta))
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
all.equal(sort_index(da_ta)+1, order(da_ta))
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
all.equal(sort_index(da_ta)+1, order(da_ta))
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
all.equal(sort_index(da_ta)+1, order(da_ta))
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
ls()
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp11::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
double_vec(1:5)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
double_vec(1:5)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
double_vec(1:5)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
double_vec2(1:5)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
double_vec2(1:5)
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
double_vec2(1:5)
da_ta <- rnorm(1e2)
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=HighFreq::double_vec2(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
times=10))[, c(1, 4, 5)]
da_ta <- rnorm(1e3)
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
double_vec_lambda=double_vec_lambda(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
double_vec_lambda=double_vec_lambda(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
double_vec_lambda=double_vec_lambda(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
double_vec_lambda=double_vec_lambda(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
double_vec_lambda=double_vec_lambda(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
double_vec_lambda=double_vec_lambda(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
mult_vec=mult_vec(da_ta),
double_vec_lambda=double_vec_lambda(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
mult_vec=mult_vec(da_ta),
double_vec_lambda=double_vec_lambda(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
mult_vec=mult_vec(da_ta),
double_vec_lambda=double_vec_lambda(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
double_vec=double_vec(da_ta),
double_vec2=double_vec2(da_ta),
mult_vec=mult_vec(da_ta),
double_vec_lambda=double_vec_lambda(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
da_ta <- sample(1001)
all.equal(sort_index(da_ta)+1, order(da_ta))
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
all.equal(sort_index(da_ta)+1, order(da_ta))
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/rcpp_test_stl_functor.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
da_ta <- sample(1001)
all.equal(sort_index(da_ta)+1, order(da_ta))
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
library(microbenchmark)
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
summary(microbenchmark(
rcode=order(da_ta),
stl=sort_index(da_ta),
times=10))[, c(1, 4, 5)]
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test.cpp")
for (i in 1:5) count_er()
for (i in 1:5) count_er()
for (i in 1:5) count_er()
# Compile Rcpp functions
Rcpp::sourceCpp(file="C:/Develop/R/Rcpp/test_stl.cpp")
(29+16)*3600/30
(29+16)*3600/29
(29+16)*3600/28
Rcpp::sourceCpp(file="/Users/jerzy/Develop/Rcpp/test_armadillo.cpp")
library(shiny); runApp('~/Develop/Presentations/app_highcharts.R')
runApp('~/Develop/Presentations/app_highcharts.R')
ls()
Rcpp::sourceCpp(file="/Users/jerzy/Develop/Rcpp/test_funptr.cpp")
ls()
Rcpp::sourceCpp(file="/Users/jerzy/Develop/Rcpp/test_funptr.cpp")
rm(list = ls())
Rcpp::sourceCpp(file="/Users/jerzy/Develop/Rcpp/test_funptr.cpp")
runfun("add2", 11.5, 2)
runfun("mult2", 11.5, 2)
runfun2("add2", 11.5, 2)
runfun2("mult2", 11.5, 2)
runfun("add2", 11.5, 2)
runfun("mult2", 11.5, 2)
drop(runfunvec("fun222", 11:5))
runfun2("fun222", 11.5, 2)
q()
